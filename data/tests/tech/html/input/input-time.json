{
  "title": "Basic html time input test",
  "description": "A basic html time input test.",
  "html_file": "html/inputs.html",
  "assertions": [
    {
      "feature_id": "html/input(type-time)_element",
      "feature_assertion_id": "convey_name"
    },
    {
      "feature_id": "html/input(type-time)_element",
      "feature_assertion_id": "convey_role"
    },
    {
      "feature_id": "html/input(type-time)_element",
      "feature_assertion_id": "convey_value"
    },
    {
      "feature_id": "html/input(type-time)_element",
      "feature_assertion_id": "convey_change_in_value",
      "browserNotes": {
        "narrator": {
          "edge": "unable to change the value without using the date picker widget"
        }
      }
    },
    {
      "feature_id": "html/input(type-time)_element",
      "feature_assertion_id": "provide_shortcuts"
    },
    {
      "feature_id": "html/input(type-time)_element",
      "feature_assertion_id": "widget_is_supported"
    },
    {
      "feature_id": "html/input(type-time)_element",
      "feature_assertion_id": "allow_data_entry"
    }
  ],
  "commands": {
    "dragon_win": {
      "chrome": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was not focused",
          "notes": "said \"click enter a date\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            }
          ]
        },
        {
          "command": "activate_role",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was not found",
          "notes": "said \"click edit\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "unable to get to the control",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "fail",
              "notes": ""
            }
          ]
        },
        {
          "command": "dictate",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "target"
          },
          "after": "na",
          "output": "input was not recognized",
          "notes": "said \"10\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "allow_data_entry",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "jaws": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"group start, enter a date [down arrow] hours, enter a date, edit spin box, 01 [down arrow] minutes enter a date, edit spin box 30 [down arrow] am slash pm enter a date edit spin box pm\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "role implied by embedded controls"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, group 13:30, hours, enter a date, edit, spin box, 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "role implied by embedded controls"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"hours, enter a date, spin box, 01, min 1, max 12\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "partial",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "each part is in the list of form fields as separately, such as \"enter a date edit hours enter a date edit 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            }
          ]
        },
        {
          "command": "forms_mode_keyboard_command",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "new value was announced if using the spin buttons, but if using the widget the new value is not conveyed after closing",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "partial",
              "notes": "for example, if you press \"up arrow\" or \"down arrow\" on any of the embedded spin boxes"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "embedded controls and widget are conveyed correctly",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"group start, enter a date [down arrow] hours, enter a date, edit spin box, 01 [down arrow] minutes enter a date, edit spin box 30 [down arrow] am slash pm enter a date edit spin box pm\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "role implied by embedded controls"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, group 13:30, hours, enter a date, edit, spin box, 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "role implied by embedded controls"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"hours, enter a date, spin box, 01, min 1, max 12\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "partial",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass",
              "notes": "has separate stops for each embedded control. note that other date inputs with embedded controls do not have similar stops."
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "each part is in the list of form fields as separately, such as \"enter a date edit hours enter a date edit 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            }
          ]
        },
        {
          "command": "forms_mode_keyboard_command",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "new value was announced if using the spin buttons, but if using the widget the new value is not conveyed after closing",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "partial",
              "notes": "for example, if you press \"up arrow\" or \"down arrow\" on any of the embedded spin boxes"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "embedded controls and widget are conveyed correctly",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            }
          ]
        }
      ],
      "ie": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"edit, 13:30, enter a date, edit, 13:30, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, edit, 13:30, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, edit, 13:30\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "in list of form fields as \"enter a date, edit, 13:30\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "new value was announced",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"group start, enter a date, [down arrow], edit spin box, 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "fail",
              "notes": "embedded control role was conveyed, but not the outer control role."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "conveyed by embedded controls"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, hours, edit spin box, 01, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "partial",
              "notes": "value was only partially conveyed"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"edit spin box, 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "partial"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "in list of form fields as distinct controls for each part, such as \"enter a date hours edit 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass",
              "notes": "has separate entries for each embedded control. note that other date inputs with embedded controls do not have similar entries."
            }
          ]
        },
        {
          "command": "forms_mode_keyboard_command",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "new value was announced",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass",
              "notes": "for example, if you press \"up arrow\" or \"down arrow\" on any of the embedded spin boxes"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "no widget to activate",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "na",
              "notes": ""
            }
          ]
        }
      ]
    },
    "narrator": {
      "edge": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, group, [down arrow], hours enter a date, 01, spin button, minimum 0, maximum 12, 01, [down arrow] (similar announcement for other controls)\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "pass because the value is conveyed for each embedded control"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, hours enter a date, spin button, 1, minimum 1, and maximum 12\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "pass because the value is conveyed for each embedded control"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, hours, enter a date, spin button, minimum 1 and maximum 12\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "pass because the value is conveyed for each embedded control"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_button",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "after changing the value in the widget and activating the button accept button, the date input was focused but the new value was not conveyed.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "fail",
              "notes": "Scan mode must be manually turned off to interact with widgets"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "embedded controls for times are conveyed correctly and operable",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            }
          ]
        }
      ]
    },
    "nvda": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"grouping, clickable, spin button, clickable, 01, spin button clickable 30, spin button, clickable PM\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "implied by reading order"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, grouping, hours, enter a date, spin button, 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "implied by embedded controls"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "pass because the value is conveyed for each embedded control"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, grouping, show time picker, menu button, subMenu\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "\"show time picker, menu button, subMenu\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "character was announced followed by the announcement of the formatted value.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass",
              "notes": "for example, if you enter \"1\" into the month field, \"1\" is announced followed by \"01\""
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "embedded controls and the widget for time are conveyed correctly.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "fail",
              "notes": "new value was not conveyed after closing the widget"
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"grouping, clickable, spin button, clickable, 01, spin button clickable 30, spin button, clickable PM\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "implied by reading order"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, grouping, hours, enter a date, spin button, 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "implied by embedded controls"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "pass because the value is conveyed for each embedded control"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, grouping, show time picker, menu button, subMenu\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "\"show time picker, menu button, subMenu\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "character was announced followed by the announcement of the formatted value.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass",
              "notes": "for example, if you enter \"1\" into the month field, \"1\" is announced followed by \"01\""
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "embedded controls and the widget for time are conveyed correctly.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "fail",
              "notes": "new value was not conveyed after closing the widget"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"clickable enter a date, grouping, clickable, hours, spin button, 01, minutes spin button 30, am/pm has auto complete, pm\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, grouping, hours, spin button 01\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "pass because embedded controls convey the value"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"clickable, enter a date, grouping, am/pm, edit has auto complete, pm\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail",
              "notes": "fail because only some of the embedded controls were found with this command"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "in list of form fields as \"AM/PM; edit has auto complete, PM\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail",
              "notes": "also has an entry for the clear button"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "fail",
              "notes": "outer role was not conveyed"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail",
              "notes": "also has an entry for the clear button"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass",
              "notes": "also has an entry for the clear button"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "character was announced followed by the announcement of the formatted value.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass",
              "notes": "for example, if you enter \"1\" into the month field, \"1\" is announced followed by \"01\""
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "embedded controls for time are conveyed correctly.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            }
          ]
        }
      ]
    },
    "talkback": {
      "and_chr": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, time picker, double tap to activate\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, time picker, double tap to activate\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_button",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "input was announced without a value",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "fail",
              "notes": "changed the value in the date picker and activated the \"set\" button."
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "was possible to change the time, however time buttons were missing the role and the selected state was not conveyed for the selected day.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "partial",
              "notes": ""
            }
          ]
        }
      ]
    },
    "va_and": {
      "and_chr": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was flagged for disambiguation",
          "notes": "said \"click enter a date\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was flagged with a number",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "was able to open the time picker and set a new time",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            }
          ]
        }
      ]
    },
    "vo_ios": {
      "ios_saf": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, 1:30pm, pop up button\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, 1:30pm, pop up button\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_button",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "fail",
              "notes": "double tapped on the control to set the time, but new value was not conveyed"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "time picker was accessible",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "vo_macos": {
      "safari": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"13:30, contents selected, enter a date, edit text\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"13:30 contents selected, Enter a date, edit text\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"13:30\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "in list of form controls as \"13:30 enter a date edit text\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "new character was announced",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "orca": {
      "firefox": [
        {
          "command": "next_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Enter a date, clickable, hours 01 spin button, minutes 30 spin button, am/pm entry, pm, clear push button\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"enter a date, panel, hours 01, spin button\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "partial",
              "notes": "value was only partially conveyed"
            }
          ]
        },
        {
          "command": "list_form_fields",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "in list as distinct form controls, one for each part",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "new value for embedded spin buttons was announced",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass",
              "notes": "enter raw value of new text"
            }
          ]
        },
        {
          "command": "forms_mode_keyboard_command",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "new value for embedded spin buttons was not announced",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "fail",
              "notes": "used up and down arrow keys to change the value"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"am/pm entry, pm\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "vc_ios": {
      "ios_saf": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was flagged for disambiguation",
          "notes": "said \"tap enter a date\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "was able to change do a desired time. said \"show numbers\" followed by \"increment <number>\" for the corresponding control.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "pass",
              "notes": ""
            }
          ]
        }
      ]
    },
    "vc_macos": {
      "safari": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was flagged for disambiguation",
          "notes": "said \"click enter a date\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was flagged with a number",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "dictate",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "target"
          },
          "after": "na",
          "output": "input was recognized",
          "notes": "said \"10\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "allow_data_entry",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "wsr": {
      "chrome": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Embedded controls were flagged for disambiguation",
          "notes": "said \"click enter a date\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "embedded controls were flagged for disambiguation",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "multiple_commands",
          "css_target": "input[type=\"datetime-local\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "was able to open the time picker but not interact with any elements in the time picker. was unable to set the value for embedded controls such as the year by saying \"numeral 1955\", however \"up arrow\" and \"down arrow\" adjusted the values.",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "widget_is_supported",
              "result": "partial",
              "notes": "partial because it was still possible to use some of the controls and enter a date"
            }
          ]
        },
        {
          "command": "dictate",
          "css_target": "input[type=\"time\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "target"
          },
          "after": "na",
          "output": "input was not recognized",
          "notes": "said \"10\"",
          "results": [
            {
              "feature_id": "html/input(type-time)_element",
              "feature_assertion_id": "allow_data_entry",
              "result": "fail"
            }
          ]
        }
      ]
    }
  },
  "history": [
    {
      "date": "2019-11-02",
      "message": "Added test"
    },
    {
      "date": "2021-07-29",
      "message": "Added Narrator results for NVDA and JAWS, updated NVDA+Chrome results."
    }
  ],
  "versions": {
    "dragon_win": {
      "browsers": {
        "chrome": {
          "at_version": "15.30",
          "os_version": "1903",
          "browser_version": "77",
          "date": "2019-11-02"
        }
      }
    },
    "jaws": {
      "browsers": {
        "chrome": {
          "at_version": "2021.2107.12",
          "browser_version": "92",
          "os_version": "21H1",
          "date": "2021-07-29"
        },
        "edge": {
          "at_version": "2021.2107.12",
          "browser_version": "92",
          "os_version": "21H1",
          "date": "2021-07-29"
        },
        "ie": {
          "at_version": "2020.2008.24",
          "os_version": "1909",
          "browser_version": "11",
          "date": "2020-09-18"
        },
        "firefox": {
          "at_version": "2020.2008.24",
          "os_version": "1909",
          "browser_version": "80",
          "date": "2020-09-18"
        }
      }
    },
    "narrator": {
      "browsers": {
        "edge": {
          "at_version": "2004",
          "os_version": "2004",
          "browser_version": "85",
          "date": "2020-09-18"
        }
      }
    },
    "nvda": {
      "browsers": {
        "chrome": {
          "at_version": "2021.2107.12",
          "browser_version": "92",
          "os_version": "21H1",
          "date": "2021-07-29"
        },
        "edge": {
          "at_version": "2021.2107.12",
          "browser_version": "92",
          "os_version": "21H1",
          "date": "2021-07-29"
        },
        "firefox": {
          "at_version": "2020.2",
          "os_version": "2004",
          "browser_version": "80",
          "date": "2020-09-18"
        }
      }
    },
    "talkback": {
      "browsers": {
        "and_chr": {
          "at_version": "8.2",
          "os_version": "7.0",
          "browser_version": "85",
          "date": "2020-09-18"
        }
      }
    },
    "va_and": {
      "browsers": {
        "and_chr": {
          "at_version": "3.1",
          "os_version": "7.0",
          "browser_version": "77",
          "date": "2019-11-02"
        }
      }
    },
    "vo_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "14.0",
          "os_version": "14.0",
          "browser_version": "14.0",
          "date": "2020-09-18"
        }
      }
    },
    "vo_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15.6",
          "os_version": "10.15.6",
          "browser_version": "14.0",
          "date": "2020-09-18"
        }
      }
    },
    "orca": {
      "browsers": {
        "firefox": {
          "at_version": "3.36.1",
          "os_version": "Ubuntu 20.04",
          "browser_version": "80",
          "date": "2020-09-18"
        }
      }
    },
    "vc_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "13.2",
          "os_version": "13.2",
          "browser_version": "13.1",
          "date": "2019-11-02"
        }
      }
    },
    "vc_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15",
          "os_version": "10.15",
          "browser_version": "13.0.2",
          "date": "2019-11-02"
        }
      }
    },
    "wsr": {
      "browsers": {
        "chrome": {
          "at_version": "1903",
          "os_version": "1903",
          "browser_version": "77",
          "date": "2019-11-02"
        }
      }
    }
  }
}
